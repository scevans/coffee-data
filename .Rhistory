T
T <- FALSE
T
is.true(T)
typeof(T)
x <- c(34,45,32,7)
x(c(-1,-2))
x[c(-1,-2)]
y <- 10
f1 <- function(x) {
function() {
x + 10
}
}
f1(1)()
f1(1)
f1(1)()
f1()(1)
f1(1)(1)
f1(1)()
?typeof
?is.list()
?sd
PREY_L <- vector(mode="numeric", length=50)
PREY_L <- seq(1,100,1)
PREY_L <- rep(PREY_L, 2)
PREY_L <- sort(PREY_L)
PREY_L <- vector(mode="numeric", length=50)
PREY_L <- seq(2,100,2)
PREY_L <- rep(PREY_L, 2)
PREY_L <- sort(PREY_L)
library(data.table)
?rbindlist
?sweep
### How does the espresso machine vary in the volume of
### coffee it dispenses for a single "large" cup?
setwd("/home/sam/Dropbox/github/coffee-data")
#setwd("wherever you put this file after downloading it")
library(ggplot2)
df <- read.csv("coffee-data.csv")
# sample size
n <- length(df$duration)
# label to print sample size in subsequent plot
n.text <- paste("n == ", n)
# data.frame of sample size label and coordinates
# at which to print it on the plot
n.df <- data.frame(n.text, x=min(df$duration), y=0.87*max(df$volume))
################################
### Volume vs. duration (duration of coffee dispensation)
{
# calculate R-squared value
rsq <- signif(summary(lm(df$volume ~ df$duration))$r.squared, digits=3)
# make a label to print R-squared value in subsequent plot
rsq.text <- paste("R^2 == ",rsq)
# make a data.frame of R-squared value label and coordinates
# at which to print it on the plot
rsq.df <- data.frame(rsq.text,x=min(df$duration),y=0.9*max(df$volume))
# function to extract regression equation
lm_eqn <- function(df)
{
m <- lm(df$volume ~ df$duration)
eq <- substitute(y == a + b*x,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2)))
as.character(as.expression(eq))
}
# generate plot w/ simple linear regression overlayed
plot <- ggplot(df, aes(duration, volume)) +
geom_point() +
stat_smooth(method="lm") +
xlab("duration of coffee dispensation (seconds)") +
ylab("volume of coffee (ml)") +
theme(axis.text=element_text(size=4), axis.title=element_text(size=5)) +
theme_bw()
# add regression equation to plot
plot <- plot +
geom_text(data=n.df, aes(x,y,label=n.text),parse=TRUE,hjust=0,vjust=0,size=5) +
geom_text(data=rsq.df, aes(x,y,label=rsq.text),parse=TRUE,hjust=0,vjust=0,size=5) +
geom_text(aes(x=min(df$duration),y=0.94*max(df$volume),label=lm_eqn(df)),parse=TRUE,hjust=0,vjust=0,size=5)
# add a layer that highlights the last data point recorded
#plot <- plot +
#  geom_point(data=df[length(df$duration),],color="red",size=2.5)
# add a layer that highlights data points where espresso machine
# had to "warm up" before dispensing coffee
plot <- plot +
geom_point(data=df[df$warmup%in%"yes",], color="red", size=2.5) +
geom_text(aes(x=mean(df$duration)-5,y=min(df$volume),label="(machine warmup before dispensed)"),
hjust=0,vjust=0.5,color="red",size=4)
# print plot in R window
plot
# save plot directly to file as a .jpeg
jpeg("coffee-volume-vs-duration.jpeg", width=7, height=5, units="in", res=300)
print(plot)
dev.off()
}
################################
### Distributions of volume dispensed: weekdays vs. weekends
{
df$workday <- factor(df$workday)
# median volumes for weekday and weekend categories
med.week <- median(df$volume[df$workday%in%"Mon-Fri"])
med.wkend <- median(df$volume[df$workday%in%"Sat-Sun"])
# generate violin-and-boxplot plot with points overlayed and jittered to better reflect sample size
vol.workday <- ggplot(df, aes(workday, volume)) +
geom_violin() +
geom_point(position=position_jitter(width=0.1,height=0)) +
# plot points representing median volumes for weekdays and weekends
geom_point(aes(x="Mon-Fri",y=med.week),color="blue",size=2.5) +
geom_point(aes(x="Sat-Sun",y=med.wkend),color="blue",size=2.5) +
xlab("time of the week") +
ylab("volume of coffee (ml)") +
theme(axis.text=element_text(size=4), axis.title=element_text(size=5)) +
coord_cartesian(ylim=c(min(df$volume)-5,max(df$volume)+30)) +
theme_bw()
# add sample sizes for weekdays and weekends
vol.workday <- vol.workday +
geom_text(aes(x="Mon-Fri",y=max(df$volume)+15,
label=paste("n == ", length(df$workday[which(df$workday%in%"Mon-Fri")]))),
parse=TRUE,hjust=0.5,vjust=0,size=5) +
geom_text(aes(x="Sat-Sun",y=max(df$volume)+15,
label=paste("n == ", length(df$workday[which(df$workday%in%"Sat-Sun")]))),
parse=TRUE,hjust=0.5,vjust=0,size=5)
# add layer highlighting points where espresso machine needed to
# "warm up" before dispensing coffee
vol.workday <- vol.workday +
geom_point(data=df[df$warmup%in%"yes",], color="red", size=2.5) +
geom_text(aes(x="Sat-Sun", y=max(df$volume)+10, label="(machine warmup before dispensed)"),
hjust=1,vjust=1,size=4,color="red") +
geom_text(aes(x="Sat-Sun", y=max(df$volume)+4, label="(median)"),
hjust=1,vjust=1,size=4,color="blue")
# print plot in R window
vol.workday
# save plot to file as .jpeg
jpeg("coffee-volume-by-workday.jpeg", width=7, height=5, units="in", res=300)
print(vol.workday)
dev.off()
}
################################
### Volume vs. time of day
{
library(plyr)
# convert HH:MM to numeric time (minutes)
df$time <- as.character(df$time) # converts from factor to character
df$time.minutes <- as.numeric(ldply(strsplit(df$time, ":"))[[1]])*60 +
as.numeric(ldply(strsplit(df$time, ":"))[[2]])
# calculate R-squared value for volume ~ time of day
rsq <- signif(summary(lm(df$volume ~ df$time.minutes))$r.squared, digits=3)
# make a label to print R-squared value in subsequent plot
rsq.text <- paste("R^2 == ",rsq)
# make a data.frame of R-squared value label and coordinates
# at which to print it on the plot
rsq.df <- data.frame(rsq.text,x=min(df$time.minutes),y=0.9*max(df$volume))
# function to extract regression equation
lm_eqn <- function(df)
{
m <- lm(df$volume ~ df$time.minutes)
eq <- substitute(y == a + b*x,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2)))
as.character(as.expression(eq))
}
# but wait, we need new plotting coordinates for n that correspond to the x range
n.df <- data.frame(n.text, x=min(df$time.minutes), y=0.87*max(df$volume))
# generate plot of volume vs. time of day
plot.time <- ggplot(df, aes(time.minutes, volume)) +
geom_point() +
stat_smooth(method="lm") +
xlab("time of day (minute)") +
ylab("volume of coffee (ml)") +
theme(axis.text=element_text(size=4), axis.title=element_text(size=5)) +
theme_bw()
# add regression equation to plot
plot.time <- plot.time +
geom_text(data=n.df, aes(x,y,label=n.text),parse=TRUE,hjust=0,vjust=0,size=5) +
geom_text(data=rsq.df, aes(x,y,label=rsq.text),parse=TRUE,hjust=0,vjust=0,size=5) +
geom_text(aes(x=min(df$time.minutes),y=0.94*max(df$volume),label=lm_eqn(df)),parse=TRUE,hjust=0,vjust=0,size=5)
# add a layer that highlights the last data point recorded
#plot <- plot +
#  geom_point(data=df[length(df$duration),],color="red",size=2.5)
# add a layer that highlights data points where espresso machine
# had to "warm up" before dispensing coffee
plot.time <- plot.time +
geom_point(data=df[df$warmup%in%"yes",], color="red", size=2.5)+
geom_text(aes(x=min(df$time.minutes),y=max(df$volume),label="(machine warmup before dispensed)"),
hjust=0,vjust=1,color="red",size=4)
# print plot in R window
plot.time
# save plot directly to file as a .jpeg
jpeg("coffee-volume-vs-time-of-day.jpeg", width=7, height=5, units="in", res=300)
print(plot.time)
dev.off()
}
################################
### Volume vs. duration (duration of coffee dispensation)
### EXCLUDING instances where machine had to warm up
{
# subset df by removing machine warmup rows
# (this is a quick-and-dirty way, and not an advisable habit for handling data)
df <- df[df$warmup%in%"no",]
# recalculate sample size
n <- length(df$duration)
# label to print sample size in subsequent plot
n.text <- paste("n == ", n)
# data.frame of sample size label and coordinates
# at which to print it on the plot
n.df <- data.frame(n.text, x=min(df$duration), y=0.87*max(df$volume))
# calculate R-squared value
rsq <- signif(summary(lm(df$volume ~ df$duration))$r.squared, digits=3)
# make a label to print R-squared value in subsequent plot
rsq.text <- paste("R^2 == ",rsq)
# make a data.frame of R-squared value label and coordinates
# at which to print it on the plot
rsq.df <- data.frame(rsq.text,x=min(df$duration),y=0.9*max(df$volume))
# function to extract regression equation
lm_eqn <- function(df)
{
m <- lm(df$volume ~ df$duration)
eq <- substitute(y == a + b*x,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2)))
as.character(as.expression(eq))
}
# generate plot w/ simple linear regression overlayed
plot.no.warmup <- ggplot(df, aes(duration, volume)) +
geom_point() +
stat_smooth(method="lm") +
xlab("duration of coffee dispensation (seconds)") +
ylab("volume of coffee (ml)") +
theme(axis.text=element_text(size=4), axis.title=element_text(size=5)) +
theme_bw()
# add regression equation to plot
plot.no.warmup <- plot.no.warmup +
geom_text(data=n.df, aes(x,y,label=n.text),parse=TRUE,hjust=0,vjust=0,size=5,color="blue") +
geom_text(data=rsq.df, aes(x,y,label=rsq.text),parse=TRUE,hjust=0,vjust=0,size=5) +
geom_text(aes(x=min(df$duration),y=0.94*max(df$volume),label=lm_eqn(df)),parse=TRUE,hjust=0,vjust=0,size=5)
# add a layer that highlights the last data point recorded
#plot <- plot +
#  geom_point(data=df[length(df$duration),],color="red",size=2.5)
# add a layer that highlights data points where espresso machine
# had to "warm up" before dispensing coffee
plot.no.warmup <- plot.no.warmup +
geom_text(aes(x=mean(df$duration)-5,y=min(df$volume),label="(machine warmup data points removed)"),
hjust=0,vjust=0.5,color="blue",size=4)
# print plot in R window
plot.no.warmup
# save plot directly to file as a .jpeg
jpeg("coffee-volume-vs-duration-excluding-warmup-data.jpeg", width=7, height=5, units="in", res=300)
print(plot.no.warmup)
dev.off()
}
df <- read.csv("coffee-data.csv")
df$workday <- factor(df$workday)
# median volumes for weekday and weekend categories
med.week <- median(df$volume[df$workday%in%"Mon-Fri"])
med.wkend <- median(df$volume[df$workday%in%"Sat-Sun"])
# generate violin-and-boxplot plot with points overlayed and jittered to better reflect sample size
vol.workday <- ggplot(df, aes(workday, volume)) +
geom_violin() +
geom_point() +
#geom_point(position=position_jitter(width=0.1,height=0)) +
# plot points representing median volumes for weekdays and weekends
geom_point(aes(x="Mon-Fri",y=med.week),color="blue",size=2.5) +
geom_point(aes(x="Sat-Sun",y=med.wkend),color="blue",size=2.5) +
xlab("time of the week") +
ylab("volume of coffee (ml)") +
theme(axis.text=element_text(size=4), axis.title=element_text(size=5)) +
coord_cartesian(ylim=c(min(df$volume)-5,max(df$volume)+30)) +
theme_bw()
# add sample sizes for weekdays and weekends
vol.workday <- vol.workday +
geom_text(aes(x="Mon-Fri",y=max(df$volume)+15,
label=paste("n == ", length(df$workday[which(df$workday%in%"Mon-Fri")]))),
parse=TRUE,hjust=0.5,vjust=0,size=5) +
geom_text(aes(x="Sat-Sun",y=max(df$volume)+15,
label=paste("n == ", length(df$workday[which(df$workday%in%"Sat-Sun")]))),
parse=TRUE,hjust=0.5,vjust=0,size=5)
# add layer highlighting points where espresso machine needed to
# "warm up" before dispensing coffee
vol.workday <- vol.workday +
geom_point(data=df[df$warmup%in%"yes",], color="red", size=2.5) +
geom_text(aes(x="Sat-Sun", y=max(df$volume)+10, label="(machine warmup before dispensed)"),
hjust=1,vjust=1,size=4,color="red") +
geom_text(aes(x="Sat-Sun", y=max(df$volume)+4, label="(median)"),
hjust=1,vjust=1,size=4,color="blue")
# print plot in R window
vol.workday
# save plot to file as .jpeg
jpeg("coffee-volume-by-workday.jpeg", width=7, height=5, units="in", res=300)
print(vol.workday)
dev.off()
vol.workday
# save plot to file as .jpeg
jpeg("coffee-volume-by-workday.jpeg", width=7, height=5, units="in", res=300)
print(vol.workday)
dev.off()
### How does the espresso machine vary in the volume of
### coffee it dispenses for a single "large" cup?
setwd("/home/sam/Dropbox/github/coffee-data")
#setwd("wherever you put this file after downloading it")
library(ggplot2)
df <- read.csv("coffee-data.csv")
# sample size
n <- length(df$duration)
# label to print sample size in subsequent plot
n.text <- paste("n == ", n)
# data.frame of sample size label and coordinates
# at which to print it on the plot
n.df <- data.frame(n.text, x=min(df$duration), y=0.87*max(df$volume))
################################
### Volume vs. duration (duration of coffee dispensation)
{
# calculate R-squared value
rsq <- signif(summary(lm(df$volume ~ df$duration))$r.squared, digits=3)
# make a label to print R-squared value in subsequent plot
rsq.text <- paste("R^2 == ",rsq)
# make a data.frame of R-squared value label and coordinates
# at which to print it on the plot
rsq.df <- data.frame(rsq.text,x=min(df$duration),y=0.9*max(df$volume))
# function to extract regression equation
lm_eqn <- function(df)
{
m <- lm(df$volume ~ df$duration)
eq <- substitute(y == a + b*x,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2)))
as.character(as.expression(eq))
}
# generate plot w/ simple linear regression overlayed
plot <- ggplot(df, aes(duration, volume)) +
geom_point() +
stat_smooth(method="lm") +
xlab("duration of coffee dispensation (seconds)") +
ylab("volume of coffee (ml)") +
theme(axis.text=element_text(size=4), axis.title=element_text(size=5)) +
theme_bw()
# add regression equation to plot
plot <- plot +
geom_text(data=n.df, aes(x,y,label=n.text),parse=TRUE,hjust=0,vjust=0,size=5) +
geom_text(data=rsq.df, aes(x,y,label=rsq.text),parse=TRUE,hjust=0,vjust=0,size=5) +
geom_text(aes(x=min(df$duration),y=0.94*max(df$volume),label=lm_eqn(df)),parse=TRUE,hjust=0,vjust=0,size=5)
# add a layer that highlights the last data point recorded
#plot <- plot +
#  geom_point(data=df[length(df$duration),],color="red",size=2.5)
# add a layer that highlights data points where espresso machine
# had to "warm up" before dispensing coffee
plot <- plot +
geom_point(data=df[df$warmup%in%"yes",], color="red", size=2.5) +
geom_text(aes(x=mean(df$duration)-5,y=min(df$volume),label="(machine warmup before dispensed)"),
hjust=0,vjust=0.5,color="red",size=4)
# print plot in R window
plot
# save plot directly to file as a .jpeg
jpeg("coffee-volume-vs-duration.jpeg", width=7, height=5, units="in", res=300)
print(plot)
dev.off()
}
################################
### Distributions of volume dispensed: weekdays vs. weekends
{
df$workday <- factor(df$workday)
# median volumes for weekday and weekend categories
med.week <- median(df$volume[df$workday%in%"Mon-Fri"])
med.wkend <- median(df$volume[df$workday%in%"Sat-Sun"])
# generate violin-and-boxplot plot with points overlayed and jittered to better reflect sample size
vol.workday <- ggplot(df, aes(workday, volume)) +
geom_violin() +
geom_point() +
#geom_point(position=position_jitter(width=0.1,height=0)) +
# plot points representing median volumes for weekdays and weekends
geom_point(aes(x="Mon-Fri",y=med.week),color="blue",size=2.5) +
geom_point(aes(x="Sat-Sun",y=med.wkend),color="blue",size=2.5) +
xlab("time of the week") +
ylab("volume of coffee (ml)") +
theme(axis.text=element_text(size=4), axis.title=element_text(size=5)) +
coord_cartesian(ylim=c(min(df$volume)-5,max(df$volume)+30)) +
theme_bw()
# add sample sizes for weekdays and weekends
vol.workday <- vol.workday +
geom_text(aes(x="Mon-Fri",y=max(df$volume)+15,
label=paste("n == ", length(df$workday[which(df$workday%in%"Mon-Fri")]))),
parse=TRUE,hjust=0.5,vjust=0,size=5) +
geom_text(aes(x="Sat-Sun",y=max(df$volume)+15,
label=paste("n == ", length(df$workday[which(df$workday%in%"Sat-Sun")]))),
parse=TRUE,hjust=0.5,vjust=0,size=5)
# add layer highlighting points where espresso machine needed to
# "warm up" before dispensing coffee
vol.workday <- vol.workday +
geom_point(data=df[df$warmup%in%"yes",], color="red", size=2.5) +
geom_text(aes(x="Sat-Sun", y=max(df$volume)+10, label="(machine warmup before dispensed)"),
hjust=1,vjust=1,size=4,color="red") +
geom_text(aes(x="Sat-Sun", y=max(df$volume)+4, label="(median)"),
hjust=1,vjust=1,size=4,color="blue")
# print plot in R window
vol.workday
# save plot to file as .jpeg
jpeg("coffee-volume-by-workday.jpeg", width=7, height=5, units="in", res=300)
print(vol.workday)
dev.off()
}
################################
### Volume vs. time of day
{
library(plyr)
# convert HH:MM to numeric time (minutes)
df$time <- as.character(df$time) # converts from factor to character
df$time.minutes <- as.numeric(ldply(strsplit(df$time, ":"))[[1]])*60 +
as.numeric(ldply(strsplit(df$time, ":"))[[2]])
# calculate R-squared value for volume ~ time of day
rsq <- signif(summary(lm(df$volume ~ df$time.minutes))$r.squared, digits=3)
# make a label to print R-squared value in subsequent plot
rsq.text <- paste("R^2 == ",rsq)
# make a data.frame of R-squared value label and coordinates
# at which to print it on the plot
rsq.df <- data.frame(rsq.text,x=min(df$time.minutes),y=0.9*max(df$volume))
# function to extract regression equation
lm_eqn <- function(df)
{
m <- lm(df$volume ~ df$time.minutes)
eq <- substitute(y == a + b*x,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2)))
as.character(as.expression(eq))
}
# but wait, we need new plotting coordinates for n that correspond to the x range
n.df <- data.frame(n.text, x=min(df$time.minutes), y=0.87*max(df$volume))
# generate plot of volume vs. time of day
plot.time <- ggplot(df, aes(time.minutes, volume)) +
geom_point() +
stat_smooth(method="lm") +
xlab("time of day (minute)") +
ylab("volume of coffee (ml)") +
theme(axis.text=element_text(size=4), axis.title=element_text(size=5)) +
theme_bw()
# add regression equation to plot
plot.time <- plot.time +
geom_text(data=n.df, aes(x,y,label=n.text),parse=TRUE,hjust=0,vjust=0,size=5) +
geom_text(data=rsq.df, aes(x,y,label=rsq.text),parse=TRUE,hjust=0,vjust=0,size=5) +
geom_text(aes(x=min(df$time.minutes),y=0.94*max(df$volume),label=lm_eqn(df)),parse=TRUE,hjust=0,vjust=0,size=5)
# add a layer that highlights the last data point recorded
#plot <- plot +
#  geom_point(data=df[length(df$duration),],color="red",size=2.5)
# add a layer that highlights data points where espresso machine
# had to "warm up" before dispensing coffee
plot.time <- plot.time +
geom_point(data=df[df$warmup%in%"yes",], color="red", size=2.5)+
geom_text(aes(x=min(df$time.minutes),y=max(df$volume),label="(machine warmup before dispensed)"),
hjust=0,vjust=1,color="red",size=4)
# print plot in R window
plot.time
# save plot directly to file as a .jpeg
jpeg("coffee-volume-vs-time-of-day.jpeg", width=7, height=5, units="in", res=300)
print(plot.time)
dev.off()
}
################################
### Volume vs. duration (duration of coffee dispensation)
### EXCLUDING instances where machine had to warm up
{
# subset df by removing machine warmup rows
# (this is a quick-and-dirty way, and not an advisable habit for handling data)
df <- df[df$warmup%in%"no",]
# recalculate sample size
n <- length(df$duration)
# label to print sample size in subsequent plot
n.text <- paste("n == ", n)
# data.frame of sample size label and coordinates
# at which to print it on the plot
n.df <- data.frame(n.text, x=min(df$duration), y=0.87*max(df$volume))
# calculate R-squared value
rsq <- signif(summary(lm(df$volume ~ df$duration))$r.squared, digits=3)
# make a label to print R-squared value in subsequent plot
rsq.text <- paste("R^2 == ",rsq)
# make a data.frame of R-squared value label and coordinates
# at which to print it on the plot
rsq.df <- data.frame(rsq.text,x=min(df$duration),y=0.9*max(df$volume))
# function to extract regression equation
lm_eqn <- function(df)
{
m <- lm(df$volume ~ df$duration)
eq <- substitute(y == a + b*x,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2)))
as.character(as.expression(eq))
}
# generate plot w/ simple linear regression overlayed
plot.no.warmup <- ggplot(df, aes(duration, volume)) +
geom_point() +
stat_smooth(method="lm") +
xlab("duration of coffee dispensation (seconds)") +
ylab("volume of coffee (ml)") +
theme(axis.text=element_text(size=4), axis.title=element_text(size=5)) +
theme_bw()
# add regression equation to plot
plot.no.warmup <- plot.no.warmup +
geom_text(data=n.df, aes(x,y,label=n.text),parse=TRUE,hjust=0,vjust=0,size=5,color="blue") +
geom_text(data=rsq.df, aes(x,y,label=rsq.text),parse=TRUE,hjust=0,vjust=0,size=5) +
geom_text(aes(x=min(df$duration),y=0.94*max(df$volume),label=lm_eqn(df)),parse=TRUE,hjust=0,vjust=0,size=5)
# add a layer that highlights the last data point recorded
#plot <- plot +
#  geom_point(data=df[length(df$duration),],color="red",size=2.5)
# add a layer that highlights data points where espresso machine
# had to "warm up" before dispensing coffee
plot.no.warmup <- plot.no.warmup +
geom_text(aes(x=mean(df$duration)-5,y=min(df$volume),label="(machine warmup data points removed)"),
hjust=0,vjust=0.5,color="blue",size=4)
# print plot in R window
plot.no.warmup
# save plot directly to file as a .jpeg
jpeg("coffee-volume-vs-duration-excluding-warmup-data.jpeg", width=7, height=5, units="in", res=300)
print(plot.no.warmup)
dev.off()
}
